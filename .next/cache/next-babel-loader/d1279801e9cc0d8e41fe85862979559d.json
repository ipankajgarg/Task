{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport * as actions from \"./actions\";\nexport const BASE_URL = \"http://api.jikan.moe/v3/search/anime?limit=16\";\nexport const getSearchDataThunk = (value, page = 1) => dispatch => {\n  dispatch(actions.getSearchDataLoading());\n  return axios.get(`${BASE_URL}?q=${value}&page=${page}`).then(res => {\n    console.log(res);\n    dispatch(actions.getSearchDataSuccess(_objectSpread(_objectSpread({}, res.data), {}, {\n      page\n    })));\n  });\n};\nexport const getSearchPaginationDataThunk = (value, page = 2) => dispatch => {\n  console.log(\"1\");\n  dispatch(actions.getSearchPaginationDataLoading());\n  console.log(\"2\");\n  return axios.get(`${BASE_URL}?q=${value}&page=${page}`).then(res => {\n    console.log(res);\n    dispatch(actions.getSearchPaginationDataSuccess(_objectSpread(_objectSpread({}, res.data), {}, {\n      page\n    })));\n  });\n};","map":{"version":3,"sources":["/Users/pankajgarg/Documents/interview-taks/nextjs/Thunk.js"],"names":["axios","actions","BASE_URL","getSearchDataThunk","value","page","dispatch","getSearchDataLoading","get","then","res","console","log","getSearchDataSuccess","data","getSearchPaginationDataThunk","getSearchPaginationDataLoading","getSearchPaginationDataSuccess"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,+CAAjB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,IAAI,GAAG,CAAf,KAAqBC,QAAQ,IAAI;AACjEA,EAAAA,QAAQ,CAACL,OAAO,CAACM,oBAAR,EAAD,CAAR;AAEA,SAAOP,KAAK,CAACQ,GAAN,CAAW,GAAEN,QAAS,MAAKE,KAAM,SAAQC,IAAK,EAA9C,EAAiDI,IAAjD,CAAsDC,GAAG,IAAI;AAClEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,IAAAA,QAAQ,CAACL,OAAO,CAACY,oBAAR,iCAAkCH,GAAG,CAACI,IAAtC;AAA4CT,MAAAA;AAA5C,OAAD,CAAR;AACD,GAHM,CAAP;AAID,CAPM;AASP,OAAO,MAAMU,4BAA4B,GAAG,CAACX,KAAD,EAAQC,IAAI,GAAG,CAAf,KAAqBC,QAAQ,IAAI;AAC3EK,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAN,EAAAA,QAAQ,CAACL,OAAO,CAACe,8BAAR,EAAD,CAAR;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,SAAOZ,KAAK,CAACQ,GAAN,CAAW,GAAEN,QAAS,MAAKE,KAAM,SAAQC,IAAK,EAA9C,EAAiDI,IAAjD,CAAsDC,GAAG,IAAI;AAClEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,IAAAA,QAAQ,CAACL,OAAO,CAACgB,8BAAR,iCAA4CP,GAAG,CAACI,IAAhD;AAAsDT,MAAAA;AAAtD,OAAD,CAAR;AACD,GAHM,CAAP;AAID,CARM","sourcesContent":["import axios from \"axios\";\nimport * as actions from \"./actions\";\n\nexport const BASE_URL = \"http://api.jikan.moe/v3/search/anime?limit=16\";\n\nexport const getSearchDataThunk = (value, page = 1) => dispatch => {\n  dispatch(actions.getSearchDataLoading());\n\n  return axios.get(`${BASE_URL}?q=${value}&page=${page}`).then(res => {\n    console.log(res);\n    dispatch(actions.getSearchDataSuccess({ ...res.data, page }));\n  });\n};\n\nexport const getSearchPaginationDataThunk = (value, page = 2) => dispatch => {\n  console.log(\"1\");\n  dispatch(actions.getSearchPaginationDataLoading());\n  console.log(\"2\");\n  return axios.get(`${BASE_URL}?q=${value}&page=${page}`).then(res => {\n    console.log(res);\n    dispatch(actions.getSearchPaginationDataSuccess({ ...res.data, page }));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}